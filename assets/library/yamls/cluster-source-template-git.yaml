---
apiVersion: carto.run/v1alpha1
kind: ClusterSourceTemplate
metadata:
  name: <NAME>
spec:
  healthRule:
    singleConditionType: Ready
  params:
    - name: serviceAccount
      default: <DEFAULT_SERVICE_ACCOUNT_NAME>
    - name: gitImplementation
      default: go-git
  revisionPath: .status.artifact.revision
  urlPath: .status.artifact.url

  ytt: |
    #@ load("@ytt:data", "data")
    #@ load("@ytt:yaml", "yaml")

    #@ def all_labels(fixed_values):
    #@   labels = {}
    #@   if hasattr(data.values.workload.metadata, "labels"):
    #@     labels.update(data.values.workload.metadata.labels)
    #@   end
    #@   labels.update(fixed_values)
    #@   return labels
    #@ end

    #@ def get_param(key):
    #@   if not key in data.values.params:
    #@     return None
    #@   end
    #@   return data.values.params[key]
    #@ end

    ---
    apiVersion: source.toolkit.fluxcd.io/v1beta1
    kind: GitRepository
    metadata:
      name: #@ data.values.workload.metadata.name
      labels: #@ all_labels({ "app.kubernetes.io/component": "source" })
    spec:
      interval: <POLL_INTERVAL_MIN>m0s
      url: #@ data.values.workload.spec.source.git.url
      ref: #@ data.values.workload.spec.source.git.ref
      gitImplementation: #@ data.values.params.gitImplementation
      ignore: |
        !.git
      #@ if get_param("<PARAM_NAME_OF_SOURCE_GIT_SECRET>"):
      secretRef:
        name: #@ get_param("<PARAM_NAME_OF_SOURCE_GIT_SECRET>")
      #@ elif get_param("<PARAM_NAME_OF_GITOPS_SSH_SECRET>"):
      secretRef:
        name: #@ get_param("<PARAM_NAME_OF_GITOPS_SSH_SECRET>")
      #@ end

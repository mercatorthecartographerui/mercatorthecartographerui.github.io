apiVersion: carto.run/v1alpha1
kind: ClusterSupplyChain
metadata:
  labels:
    author: admin
    org: myorg
    buildfor: webapps
  name: sample-supply-chain
spec:
  selector:
    apps.tanzu.vmware.com/has-tests: "true"
    apps.tanzu.vmware.com/is-custom: "true"
  selectorMatchExpressions:
    - key: apps.tanzu.vmware.com/workload-type
      operator: In
      values:
        - web
        - server
        - worker
  params:
    - name: maven_repository_url
      value: https://repo.maven.apache.org/maven2
    - name: gitops_branch
      default: main
    - name: gitops_user_name
      default: mercator
    - name: gitops_user_email
      default: mercator@cluster.local
    - name: gitops_commit_message
      default: commit-from-mercator
    - name: gitops_ssh_secret
      default: git-ssh
    - name: gitops_server_address
      default: ssh://git@github.com:22
    - name: gitops_repository_owner
      default: sampleusername
    - name: gitops_repository_name
      default: some-repository
  resources:
    - name: get-source
      templateRef:
        kind: ClusterSourceTemplate
        name: source-git-pull
      params:
        - name: serviceAccount
          value: default
        - name: gitImplementation
          value: go-git
    - name: test-source
      templateRef:
        kind: ClusterSourceTemplate
        name: test-template
      sources:
        - name: source
          resource: get-source
    - name: scan-source
      templateRef:
        kind: ClusterSourceTemplate
        name: source-scanner
      params:
        - name: scanning_source_policy
          default: scan-policy
        - name: scanning_source_template
          default: blob-source-scan-template
      sources:
        - name: source
          resource: test-source
    - name: make-oci-image
      templateRef:
        kind: ClusterImageTemplate
        options:
          - name: kpack-template
            selector:
              matchFields:
                - key: spec.params[?(@.name=="dockerfile")]
                  operator: DoesNotExist
                  values:
                    - a
                    - b
          - name: kaniko-template
            selector:
              matchFields:
                - key: spec.params[?(@.name=="dockerfile")]
                  operator: Exists
      params:
        - name: serviceAccount
          value: default
        - name: registry
          value:
            ca_cert_data: ""
            repository: projects
            server: mypvtregistry.azurecr.io
        - default: default
          name: clusterBuilder
        - default: ./Dockerfile
          name: dockerfile
        - default: ./
          name: docker_build_context
      sources:
        - name: source
          resource: scan-source
    - name: scan-oci-image
      templateRef:
        kind: ClusterImageTemplate
        name: scan-oci-image-template
      params:
        - name: scanning_image_policy
          default: scan-policy
        - name: scanning_image_template
          default: private-image-scan-template
      images:
        - name: image
          resource: make-oci-image
    - name: configure-pod-run
      templateRef:
        kind: ClusterConfigTemplate
        name: pod-run-convention
      params:
        - name: serviceAccount
          value: default
      images:
        - name: image
          resource: scan-oci-image
    - name: config-provider
      templateRef:
        kind: ClusterConfigTemplate
        options:
          - name: config-template
            selector:
              matchLabels:
                apps.tanzu.vmware.com/workload-type: web
                apps.tanzu.vmware.com/mode: custom
      configs:
        - name: config
          resource: configure-pod-run
    - name: service-bindings
      templateRef:
        kind: ClusterConfigTemplate
        name: service-bindings
      configs:
        - name: app_def
          resource: config-provider
    - name: api-descriptors
      templateRef:
        kind: ClusterConfigTemplate
        name: api-descriptors
      configs:
        - name: app_def
          resource: service-bindings
    - name: config-writer
      templateRef:
        kind: ClusterTemplate
        name: config-writer-template
      params:
        - name: serviceAccount
          value: default
        - name: registry
          value:
            repository: projects
            server: mypvtregistry.azurecr.io
      configs:
        - name: config
          resource: api-descriptors
    - name: deliverable
      templateRef:
        kind: ClusterTemplate
        name: deliverable-template
      params:
        - name: registry
          value:
            ca_cert_data: ""
            repository: projects
            server: mypvtregistry.azurecr.io

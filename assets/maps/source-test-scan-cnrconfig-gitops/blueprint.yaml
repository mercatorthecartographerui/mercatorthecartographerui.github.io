apiVersion: carto.run/v1alpha1
kind: ClusterSupplyChain
metadata:
  generation: 1
  labels:
    mode: "custom"
  name: custom-source-test-scan-to-url
spec:
  selector:
    apps.tanzu.vmware.com/has-tests: "true"
    apps.tanzu.vmware.com/is-custom: "true"
  selectorMatchExpressions:
    - key: apps.tanzu.vmware.com/workload-type
      operator: In
      values:
        - web
        - server
        - worker
  params:
    - name: maven_repository_url
      value: https://repo.maven.apache.org/maven2
    - name: gitops_branch
      default: main
    - name: gitops_user_name
      default: supplychain
    - name: gitops_user_email
      default: supplychain
    - name: gitops_commit_message
      default: tap-demo-commit-from-dctap1
    - name: gitops_ssh_secret
      default: git-ssh
    - name: gitops_server_address
      default: https://github.com
    - name: gitops_repository_owner
      default: alinahid477
    - name: gitops_repository_name
      default: https://github.com/alinahid477/tapdemo-gitops

  resources:
    - name: source-provider
      templateRef:
        kind: ClusterSourceTemplate
        name: custom-source-template
      params:
        - name: serviceAccount
          value: default
        - name: gitImplementation
          value: go-git

    - name: source-tester
      templateRef:
        kind: ClusterSourceTemplate
        name: testing-pipeline
      sources:
        - name: source
          resource: source-provider

    - name: source-scanner
      templateRef:
        kind: ClusterSourceTemplate
        name: source-scanner-template
      params:
        - default: scan-policy
          name: scanning_source_policy
        - default: blob-source-scan-template
          name: scanning_source_template
      sources:
        - name: source
          resource: source-tester

    - name: image-provider
      templateRef:
        kind: ClusterImageTemplate
        options:
          - name: kpack-template
            selector:
              matchFields:
                - key: spec.params[?(@.name=="dockerfile")]
                  operator: DoesNotExist
                  values:
                    - a
                    - b
          - name: kaniko-template
            selector:
              matchFields:
                - key: spec.params[?(@.name=="dockerfile")]
                  operator: Exists
      params:
        - name: serviceAccount
          value: default
        - name: registry
          value:
            ca_cert_data: ""
            repository: projects
            server: mypvtregistry.azurecr.io
        - default: default
          name: clusterBuilder
        - default: ./Dockerfile
          name: dockerfile
        - default: ./
          name: docker_build_context
        - default: []
          name: docker_build_extra_args
      sources:
        - name: source
          resource: source-scanner

    - name: image-scanner
      templateRef:
        kind: ClusterImageTemplate
        name: image-scanner-template
      params:
        - name: scanning_image_policy
          default: scan-policy
        - name: scanning_image_template
          default: private-image-scan-template
      images:
        - name: image
          resource: image-provider

    - name: config-provider
      templateRef:
        kind: ClusterConfigTemplate
        name: convention-template
      params:
        - name: serviceAccount
          value: default
      images:
        - name: image
          resource: image-scanner

    - name: app-config
      templateRef:
        kind: ClusterConfigTemplate
        options:
          - name: config-template
            selector:
              matchLabels:
                apps.tanzu.vmware.com/workload-type: web
                apps.tanzu.vmware.com/mode: custom
          - name: server-template
            selector:
              matchLabels:
                apps.tanzu.vmware.com/workload-type: server
          - name: worker-template
            selector:
              matchLabels:
                apps.tanzu.vmware.com/workload-type: worker
      configs:
        - name: config
          resource: config-provider

    - name: service-bindings
      templateRef:
        kind: ClusterConfigTemplate
        name: service-bindings
      configs:
        - name: app_def
          resource: app-config

    - name: api-descriptors
      templateRef:
        kind: ClusterConfigTemplate
        name: api-descriptors
      configs:
        - name: app_def
          resource: service-bindings

    - name: config-writer
      templateRef:
        kind: ClusterTemplate
        name: config-writer-template
      params:
        - name: serviceAccount
          value: default
        - name: registry
          value:
            ca_cert_data: ""
            repository: projects
            server: mypvtregistry.azurecr.io
      configs:
        - name: config
          resource: api-descriptors

    - name: deliverable
      templateRef:
        kind: ClusterTemplate
        name: deliverable-template
      params:
        - name: registry
          value:
            ca_cert_data: ""
            repository: projects
            server: mypvtregistry.azurecr.io
